<html><head>
<title>Функция. Прототип</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<table cellspacing=0 cellpadding=0 border=0 background="../../PICTURES/MENU/HEADER0.JPG" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<img src="../../PICTURES/MENU/LOGO.GIF" width=157 height=53 border=0 alt="Server for Information Technologies">
</td><td align="right">
<font size="-2">Сервер поддерживается<br><a class="plain" href="http://www.citmgu.ru">Центром Информационных Технологий</a><br>(095) 932-9212, 932-9213, 939-0783<br>E-mail: <a class=noneline href="mailto:info@citmgu.ru?Subject='From page topic CIT FORUM local copy'">info@citforum.ru</a></font>
</td></tr>
</table>
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="left">
<font size="-1">Сервер содержит море(!) аналитической информации</font>
</td><td align="right">
<font size="-1">CIT Forum CD-ROM</font>
</td></tr>
</table>
</td></tr>
</table>
<h4>Функция. Прототип</h4>
<p align=justify>Функция в C++ объявляется, определяется, вызывается. В разделе, посвящённом структуре программного модуля, в качестве примера мы уже рассматривали синтаксис определения функции. Определение функции состоит из заголовка и тела. Заголовок функции состоит из спецификаторов объявления, имени функции и списка параметров. Тело функции образуется блоком операторов.
<p align=justify>Синтаксис выражений вызова функции ранее был рассмотрен достаточно подробно. Это постфиксное выражение со списком (возможно пустым) выражений в круглых скобках. При разборе выражения вызова, транслятору C++ требуется информация об основных характеристиках вызываемой функции. К таковым, прежде всего, относятся типы параметров, а также тип возвращаемого значения функции. При этом тип возвращаемого значения оказывается актуален лишь в том случае, если выражение вызова оказывается частью более сложного выражения.
<p align=justify>Если определение функции встречается транслятору до выражения вызова, никаких проблем не возникает. Вся необходимая к этому моменту информация о функции оказывается доступной из её определения:
<pre>#include &lt;iostream.h&gt;
void ZZ(int param) // Определение функции.
{
 cout &lt;&lt; "This is ZZ &gt;&gt; " &lt;&lt; param &lt;&lt; endl;
}
void main (void)
{
ZZ(10); // Вызов функции. Транслятор уже знает о функции всё.
}</pre>
<p align=justify>При этом не принципиально фактическое расположение определения функции и выражения её вызова. Главное, чтобы в момент разбора выражения вызова в транслятор знал бы всё необходимое об этой функции. Например, в таком случае:
<pre>#include &lt;iostream.h&gt;
#include "zz.cpp"
/*</pre>
<p align=justify>Препроцессор к моменту трансляции "подключает" определение функции ZZ() из файла zz.cpp.
<pre>*/
void main (void)
{
ZZ(125);
}
Файл zz.cpp:
void ZZ(int par1)
{
 cout &lt;&lt; "This is ZZ " &lt;&lt; par1 &lt;&lt; endl;
}</pre>
<p align=justify>Но как только в исходном файле возникает ситуация, при которой вызов функции появляются в тексте программы до определения функции, разбор выражения вызова завершается ошибкой:
<pre>#include &lt;iostream.h&gt;
void main (void)
{
ZZ(10);
/* Здесь транслятор сообщит об ошибке. */
}
void ZZ(int param)
{
 cout &lt;&lt; "This is ZZ " &lt;&lt; param &lt;&lt; endl;
}</pre>
<p align=justify>Каждая функция, перед тем, как она будет вызвана, по крайней мере, должна быть объявлена. Это обязательное условие успешной трансляции и вольный перевод соответствующего сообщения об ошибке (Call to undefined function 'ИмяФункции'), выдаваемого транслятором в случае вызова необъявленной функции.
<p align=justify>Напомним, что объявление и определение - разные вещи. Объект может быть много раз объявлен, но только один раз определён. Прототип функции при этом играет роль объявления функции. В объявлении функции сосредоточена вся необходимая транслятору информация о функции - о списке её параметров и типе возвращаемого значения. И это всё, что в момент трансляции вызова необходимо транслятору для осуществления контроля над типами. Несоответствия типов параметров в прототипе и определении функции выявляются на стадии окончательной сборки программы. Несоответствие спецификации возвращаемого значения в объявлении прототипа и определении функции также является ошибкой.
<pre>#include &lt;iostream.h&gt;
void ZZ(int ppp); 
/*
Эта строка требуется для нормальной компиляции программы.
Это и есть прототип функции. Имя параметра в объявлении может
не совпадать с именем параметра в определении.
*/
void main (void)
{
ZZ(125);
}
void ZZ(int par1)
{
 cout &lt;&lt; "This is ZZ " &lt;&lt; par1 &lt;&lt; endl;
}</pre>
<p align=justify>Самое интересное, что и такое объявление не вызывает возражений транслятора.
<pre>#include &lt;iostream.h&gt;
void ZZ(int);
/*
Отсутствует имя параметра. Можно предположить, что имя параметра
не является обязательным условием правильной компиляции.
*/
void main (void)
{
ZZ(125);
}
void ZZ(int par1)
{
 cout &lt;&lt; "This is ZZ " &lt;&lt; par1 &lt;&lt; endl;
}</pre>
<p align=justify>Правила грамматики подтверждают это предположение. Ранее соответствующее множество БНФ уже рассматривалось:
<pre><u>ОбъявлениеПараметра</u> ::= <u>СписокСпецификаторовОбъявления Описатель</u>
                    ::= <u>СписокСпецификаторовОбъявления</u>
                                                <u>Описатель</u>
                                                  <u>Инициализатор</u>
                    ::= <u>СписокСпецификаторовОбъявления</u>
                                             [<u>АбстрактныйОписатель</u>]
                                                      [<u>Инициализатор</u>]</pre>
<p align=justify>Из этой формы Бэкуса-Наура следует, что объявление параметра может состоять из одного спецификатора объявления (частный случай списка спецификаторов). Так что имени параметра в списке объявления параметров в прототипе функции отводится в букальном смысле роль украшения. Его основное назначение в прототипе - обеспечение легкочитаемости текста программы. Принципиальное значение имеет соответствие типов параметров в определении и объявлении функции.
<p align=justify>Попытка трансляции следующего примера программы оказывается неудачной.
<pre>#include &lt;iostream.h&gt;
void ZZ(float);// Другой тип параметра.
void main (void)
{
ZZ(125);
}
void ZZ(int par1)
{
 cout &lt;&lt; "This is ZZ " &lt;&lt; par1 &lt;&lt; endl;
}</pre>
<p align=justify>Если функция не возвращает значения, в объявлении и определении обязательно используется спецификатор объявления void.
<p align=justify>Функция также может не иметь параметров. В этом случае объявление параметров в определении и прототипе может быть либо пустым, либо может состоять из одного ключевого слова void. В контексте объявления параметров слово void и пустой список спецификаторов параметров эквивалентны.
<center>
<p><font size="-1"><a href="CPP_055.HTM">Назад</a> |
 <a href=INDEX.HTM>Содержание</a> |
 <a href="CPP_057.HTM">Вперед</a>
</font></center>
<p>&nbsp;
<table cellspacing=0 cellpadding=0 border=0 background="../../PICTURES/MENU/FOOTER0.JPG" width="100%">
<tr><td align="center">
<table cellspacing=0 cellpadding=4 border=0 width="100%" background="">
<tr><td align="right" valign="top" width="33%">
<font size="-2">Comments: <a class="plain" href="mailto:info@citmgu.ru?Subject='From bottom of CIT FORUM local copy'">info@citmgu.ru</a><br>
Designed by <a class="plain" href="mailto:andrey@novikov.com">Andrey Novikov</a><br>
Copyright &copy; <a class="plain" href="http://www.citmgu.ru/">CIT</a></font>
</td></tr>
</table>
</td></tr>
</table></body></html>
