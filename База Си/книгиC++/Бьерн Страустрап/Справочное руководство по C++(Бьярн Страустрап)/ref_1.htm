<html><head>
<title>Введение. Справочное руководство по C++</title>
		    <style type="text/css">
TH.arial { font-family: Arial, Serif;}
P.topic { font-family: sans-serif;}
A.plain { text-decoration: none;}
A.topic01 { color: #006890;
font-family: sans-serif;
text-decoration: none;}
A.topic02 { color: #099771;
font-family: sans-serif;
text-decoration: none;}
A.topic03 { color: #719709;
font-family: sans-serif;
text-decoration: none;}
A.topic04 { color: #98650A;
font-family: sans-serif;
text-decoration: none;}
A.topic05 { color: #98340A;
font-family: sans-serif;
text-decoration: none;}
A.topic06 { color: #099607;
font-family: sans-serif;
text-decoration: none;}
A.topic07 { color: #9E1215;
font-family: sans-serif;
text-decoration: none;}
A.topic08 { color: #970941;
font-family: sans-serif;
text-decoration: none;}
A.topic09 { color: #950995;
font-family: sans-serif;
text-decoration: none;}
A.topic010 { color: #390A98;
font-family: sans-serif;
text-decoration: none;}
H1 { font-family: sans-serif;}
H2 { font-family: sans-serif;}
H3 { font-family: sans-serif;}
H4 { font-family: sans-serif;}
H5 { font-family: sans-serif;}
H6 { font-family: sans-serif;}
</style>
</head>
<body bgcolor="#FFFFFF" link="#006890" vlink="#003860" alink="#800000" text="#000000">
<a name=1></a>
<h3>1. Введение</h3>
<p align=justify>Язык  программирования   C++  -  это  C<a href=#prim><sup>*</sup></a>,  расширенный  введением
классов, inline-функций,    перегруженных  операций,  перегруженных
имен  функций,   константных  типов,  ссылок,  операций  управления
свободной памятью,  проверки параметров  функций. Коротко  различия
между С++  и  "старым  С"  приведены  в  <a href=ref_8.htm#15>#15</a>.  В  этом  руководстве
описывается язык по состоянию на Июнь 1985.
<a name=2></a>
<h3> 2. Договоренности о лексике </h3>
<p align=justify>Есть  шесть   классов  лексем:  идентификаторы,  ключевые  слова,
константы, строки, операторы и прочие разделители. Символы пробела,
табуляции и  новой строки,  а  также  комментарии  (собирательно  -
"белые места"),  как описано ниже, игнорируются, за исключением тех
случаев, когда  они служат разделителями лексем. Некое пустое место
необходимо  для   разделения  идентификаторов,   ключевых  слов   и
констант, которые в противном случае окажутся соприкасающимися.
<p align=justify>Если входной  поток  разобран  на  лексемы  до  данного  символа,
принимается, что следующая лексема содержит наиболее длинную строку
символов из тех, что могут составить лексему.
<a name=2_1></a>
<h4>2.1 Комментарии</h4>
<p align=justify>Символы  /* задают начало комментария, заканчивающегося символами
*/. Комментарии  не могут  быть  вложенными.  Символы  //  начинают
комментарий, который  заканчивается в  конце строки, на которой они
появились.
<a name=2_2></a>
<h4>2.2 Идентификаторы (имена)</h4>
<p align=justify>Идентификатор  -  последовательность  букв  и  цифр  произвольной
длины; первый  символ обязан  быть буквой; подчерк '_' считается за
букву; буквы в верхнем и нижнем регистрах являются различными.
<a name=2_3></a>
<h4>2.3 Ключевые слова</h4>
<p align=justify>Следующие  идентификаторы  зарезервированы  для  использования  в качестве ключевых слов и не могут использоваться иным образом:
<pre>
	asm       auto      break     case      char
	class     const     continue  default   delete
	do        double    else      enum      extern
	float     for       friend    goto      if
	inline    int       long      new       operator
	overload  public    register  return    short
	sizeof    static    struct    switch    this
	typedef   union     unsigned  virtual   void
	while
</pre>
Идентификаторы signed  и volatile  зарезервированы для применения в
будущем.
<a name=2_4></a>
<h4>2.4 Константы</h4>
<p align=justify>Как  описано   ниже,  есть   несколько  видов  констант.  В  <a href=ref_1.htm#2_6>#2.6</a>
приводится краткая  сводка аппаратных характеристик, которые влияют
на их размеры.
<a name=2_4_1></a>
<h4><i>2.4.1 Целые константы</i></h4>
<p align=justify>Целая константа,  состоящая из последовательности цифр, считается
восьмеричной, если  она начинается с 0 (цифры ноль), и десятичной в
противном случае.  Цифры 8  и 9  не являются восьмеричными цифрами.
Последовательность  цифр,   которой     предшествует  0х   или  0Х,
воспринимается как  шестнадцатеричное  целое.  В  шестнадцатеричные
цифры входят буквы от а или А до f или F, имеющие значения от 10 до
15. Десятичная  константа, значение  которой  превышает  наибольшее
машинное целое  со знаком, считается длинной (long); восьмеричная и
шестнадцатеричная константа,  значение которой превышает наибольшее
машинное целое со знаком, считается long; в остальных случаях целые
константы считаются int.
<a name=2_4_2></a>
<h4><i>2.4.2 Явно заданные длинные константы</i></h4>
<p align=justify>Десятичная,  восьмеричная  или  шестнадцатеричная  константа,  за
которой непосредственно  стоит l  (латинская буква  "эль")  или  L,
считается длинной константой.
<a name=2_4_3></a>
<h4><i>2.4.3 Символьные константы</i></h4>
<p align=justify>Символьная константа состоит из символа, заключенного в одиночные
кавычки  (апострофы),  как,  например,  'х'.  Значением  символьной
константы является  численное значение  символа в  машинном  наборе
символов (алфавите).  Символьные константы  считаются данными  типа
int.
<p align=justify>Некоторые неграфические  символы, одиночная  кавычка ' и обратная
косая \,  могут  быть  представлены  в  соответствие  со  следующей
таблицей escape-последовательностей:
<pre>
	символ новой строки              NL(LF)        \n
	горизонтальная табуляция         NT            \t
	вертикальная табуляция           VT            \v
	возврат на шаг                   BS            \b
	возврат каретки                  CR            \r
	перевод формата                  FF            \f
	обратная косая                   \             \\
	одиночная кавычка (апостроф)     '             \'
	набор битов                      0ddd          \ddd
	набор битов                      0xddd         \xddd
</pre>
<p align=justify>Escape-последовательность \ddd  состоит  из  обратной  косой,  за
которой следуют  1, 2  или 3  восьмеричных цифры, задающие значение
требуемого символа.  Специальным случаем  такой конструкции является
\0 (не  следует ни  одной  цифры),  задающая  пустой  символ  NULL.
Escape-последовательность  \xddd  состоит  из  обратной  косой,  за
которой следуют  1,  2  или  3  шестнадцатеричных  цифры,  задающие
значение требуемого  символа.  Если  следующий  за  обратной  косой
символ не  является  одним  из  перечисленных,  то  обратная  косая
игнорируется.
<a name=2_4_4></a>
<h4><i>2.4.4 Константы с плавающей точкой</i></h4>
<p align=justify>Константа с  плавающей точкой  состоит из целой части, десятичной
точки, мантиссы,  е или Е и целого показателя степени (возможно, но
не обязательно,  со знаком).  Целая часть и мантисса обе состоят из
последовательности цифр. Целая часть или мантисса (но не обе сразу)
может быть  опущена; или  десятичная точка, или е(Е) вместе с целым
показателем степени  (но не  обе  части  одновременно)  может  быть
опущена. Константа с плавающей точкой имеет тип double.
<a name=2_4_5></a>
<h4><i>2.4.5 Перечислимые константы</i></h4>
<p align=justify>Имена,  описанные   как  перечислители,   (см.   <a href=ref_5.htm#8_5><a href=ref_5.htm#8_5>#8.5</a></a>)   являются
константами типа int.
<a name=2_4_6></a>
<h4><i>2.4.6 Описанные константы</i></h4>
<p align=justify>Объект  (<a href=ref_3.htm#5>#5</a>)   любого  типа  может  быть  определен  как  имеющий
постоянное значение  во всей  области видимости (<a href=ref_2.htm#4_1>#4.1</a>) его имени. В
случае указателей  для  достижения  этого  используется  декларатор
*const; для  объектов, не  являющихся    указателями,  используется
описатель const (<a href=ref_5.htm#8_2>#8.2</a>).
<a name=2_5></a>
<h4>2.5 Строки</h4>
<p align=justify>Строка есть  последовательность символов,  заключенная в  двойные
кавычки: "...".  Строка имеет  тип "массив символов" и класс памяти
static (см. <a href=ref_2.htm#4>#4</a> ниже), она инициализируется заданными символами. Все
строки, даже  если они  записаны  одинаково,  различны.  Компилятор
располагает в  конце каждой  строки нулевой (пустой) байт \0 с тем,
чтобы сканирующая  строку программа  могла найти ее конец. В строке
перед символом двойной кавычки " обязательно должен стоять \; кроме
того, могут  использоваться те  же  escape-последовательности,  что
были описаны  для символьных  констант. И,  наконец,  символ  новой
строки может  появляться только  сразу после  \; тогда  оба, -  \  и
символ новой строки, - игнорируются.
<a name=2_6></a>
<h4>2.6 Харктеристики аппаратного обеспечения</h4>
<p align=justify>В  нижеследующей  таблице  собраны  некоторые  харктеристики
аппаратного обеспечения, различающиеся от машины к машине.
<p><table border=1 width=100%>
<tr valign=top><td>&nbsp;<td>  DEC VAX-11 ASCII <td> Motorola 68000 ASCII <td> IBM 370 EBCDIC <td> AT&T 3B ASCII </tr>
<tr valign=top><td> char <td> 8 бит <td> 8 бит <td> 8 бит <td> 8 бит </tr>
<tr valign=top><td> int <td> 32 бит <td> 16 бит <td> 32 бит <td> 16 бит </tr>
<tr valign=top><td> short <td> 16 бит <td> 16 бит <td> 16 бит <td> 16 бит </tr>
<tr valign=top><td> long <td> 32 бит <td> 32 бит <td> 32 бит <td> 32 бит </tr>
<tr valign=top><td> float <td> 32 бит <td> 32 бит <td> 32 бит <td> 32 бит </tr>
<tr valign=top><td> double <td> 64 бит <td> 64 бит <td> 64 бит <td> 64 бит </tr>
<tr valign=top><td> указатель<td> 32 бит <td> 32 бит <td> 24 бит <td> 32 бит </tr>
<tr valign=top><td> диапазон float <td> +_10E+_38 <td> +_10E+_38 <td> +_10E+_76 <td> +_10E+_38 </tr>
<tr valign=top><td> диапазон double <td> +_10E+_38 <td> +_10E+_38 <td> +_10E+_76 <td> +_10E+_308 </tr>
<tr valign=top><td> тип char <td> знаковый <td> без знака <td> без знака <td> без знака </tr>
<tr valign=top><td> тип поля <td> знаковый <td> без знака <td> без знака <td> без знака </tr>
<tr valign=top><td> порядок <td> справа <td> слева <td> слева <td> слева </tr>
<tr valign=top><td> полей <td> налево <td> направо <td> направо <td> направо </tr>
</table>
<a name=prim></a><small>
<p align=justify>* "Язык  программирования Си"  Брайэна В.  Кернигана и Денниса М.Ритчи. Это  руководство было  построено на  основе  "C  Programming
Language -  Reference Manual" системы UNIX V с разрешения AT&T Bell
Laboratories. (прим. автора)</small>
<p><center><p>
<font size=-1>
<a href="index.htm">Содержание</a> | <a href="ref_2.htm">Вперед</a></font></center></p>
<br>
<div align="center"><a href="http://www.linkexchange.ru/users/000729/goto.map" target="_blank"><img ismap src="http://www.linkexchange.ru/cgi-bin/rle.cgi?729?28340234" alt="Russian LinkExchange Advertising Network" border=0 height=60 width=468 vspace=0></a></div>
</body></html>
