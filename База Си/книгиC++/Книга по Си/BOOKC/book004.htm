<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>Документация по Cи, C++ и Visual C++</title>
</head>

<body background="../../background/bg6.gif" link="#000000" vlink="#000000" topmargin="2"
leftmargin="5" bgcolor="#B3FFD9">

<dl>
  <p align="center"><font face="Arial" color="maroon"><big><strong>Операторы</strong>&nbsp;
  <strong>IF - ELSE</strong></big></font></p>
  <div align="center"><center><table border="0" width="90%"
   bgcolor="#B3FFD9"
  cellspacing="0" cellpadding="0" height="1307"
  bordercolorlight
  bordercolordark>
    <tr>
      <td width="100%" height="1307"><p align="left"><strong><big><font face="Arial"
      color="#0080FF">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      Стр.
      4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </font></big><font
      face="Arial" color="#800000"><small>&lt; <a href="../visual_docum1.htm" target="_self"
      style="color: rgb(128,64,64)">оглавление </a>&gt;</small></font></strong></p>
      <p align="left">&nbsp;&nbsp; Рассмотрим организацию ввода-
      вывода и реализацию <strong>основных управляющих
      структур. </strong>Любой конкретный алгоритм может
      быть записан на языке программиррования,
      использующем только три управляющий структуры:
      последовательное выполнение, ветвление и
      повторение.&nbsp;<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Последовательное
      выполнение стль обычно, что мы редко о нем
      вспоминаем, как&nbsp; об управляющей структуре.
      Последовательность операторов выполняется в
      порядке их естественнго расположения в
      программе, с возможным отклонением для вызова
      внешнего франмента (функции), но с обязательным
      возратом в точку вызова.<br>
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Ветвление в
      простейшем случае описывается в языке Си с
      помощью условного оператора. имеющего вид: </p>
      <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="37%">
        <tr>
          <td width="100%"><strong>&nbsp;&nbsp;&nbsp; if ( выражение )</strong><br>
          <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; оператор_1;</strong><br>
          <strong>&nbsp;&nbsp;&nbsp; else </strong><br>
          <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; оператор_2;</strong><br>
          &nbsp; &nbsp;</td>
        </tr>
      </table>
      </center></div><p><font face="Times New Roman" color="#000000">где часть <strong>else</strong>
      может и отсутствовать. Сначала вычисляется
      &quot;выражение&quot;</font><font face="Arial" color="#804040"><strong><small> </small></strong></font><font
      face="Times New Roman" color="#000000">в скобках; если оно истинно
      то выполняется <strong>оператор_1</strong>. Если &quot;<strong>выражение&quot;
      </strong>ложно (равно нулю -<strong> NULL</strong>), то <strong>оператор_1</strong>
      пропускается, а выполняется <strong>оператор_2</strong>.
      Если на месте условно выполняемых операторов
      должна располагаться группа из нескольких
      операторов языка, то они заключаются в фигурные
      скобки - <strong>{ }. </strong>Часто &quot;выражение&quot; в
      скобках представляет условие, заданное с помощью
      операций отношений и логических операций.
      Операции отношения обозначаются в Си следующим
      образом: </font></p>
      <p><font face="Times New Roman" color="#000000">&nbsp;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>= = равно; ! = &nbsp;
      не равно; &lt;&nbsp; меньше; &gt;&nbsp; больше;</strong></font><br>
      <font face="Times New Roman" color="#000000"><strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      &lt; = меньше или равно; &gt; = больше или равно. </strong></font></p>
      <p>&nbsp; Символ <strong>! </strong>в языке Си обозначает
      логическое отрицание. Есть еще две логические
      операции: <strong>||</strong> означает или, а <strong>&amp;&amp;</strong>
      - логическое <strong>И</strong>. Операции отношения имеют
      приоретет ниже арифметических операций, так что
      выражение вида&nbsp;&nbsp; <strong>k &gt; n%i </strong>вычисляется
      как <strong>k &gt; (n%i). </strong>Приоритет <strong>&amp;&amp;</strong>
      выше, чем у ||, но обе логические операции
      выполняются после операций отношения и
      арифметических. В сомнительных случаях лучше
      расставлять скобки.<br>
      </p>
      <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Для иллюстрации применения
      условного оператора рассмотрим программу
      определения большего из трех чисел. Первый <strong>if </strong>оператор
      представляет полную условную конструкцию, во
      втором случае <strong>else </strong>отсутствует. Обратите
      внимание, что точка с запятой, завершая оператор
      присваивания <strong>max=x, </strong>не нарушает единство <strong>if</strong>-
      оператора. Если <strong>else</strong>- ветвь пропускается
      во вложенных условиях, возможна неоднозначность
      их толкования. Во избежание двусмысленностей
      решают так: <strong>else&nbsp; </strong>соответствует
      ближайшему <strong>if, </strong>не имеющего своего<strong> else</strong>.
      </p>
      <p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Пример
      1.3.</p>
      <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="446">
        <tr>
          <td width="446"><strong>#include &lt;stdio.h&gt; <br>
          main()
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <font color="#008080">&nbsp; /* главная функция*/</font><br>
          { <br>
          &nbsp; int x, y, z, max ;
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <font color="#008080">/* описание переменных*/</font><br>
          printf(&quot; Введите три числа :\n &quot;);&nbsp; <br>
          scanf(&quot; %d %d %d &quot;, &amp;x, &amp;y, &amp;z);&nbsp; <font color="#008080">/*ввод
          трех чисел*/</font><br>
          if( x &gt; y)
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <font color="#008080">/*операции сравнивания*/</font><br>
          &nbsp;&nbsp;&nbsp;&nbsp; max=x; <br>
          else
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
          <br>
          &nbsp; max=y; <br>
          if ( z&gt;max) <br>
          &nbsp; max=z; <br>
          printf(&quot; Максимальное из (%d, %d, %d)= %d \n&quot;,x, y, z, max); <br>
          &nbsp; }</strong></td>
        </tr>
      </table>
      </center></div><p align="left"><font face="Arial" color="#804040"><strong><small>&nbsp;&nbsp;
      </small></strong></font><font face="Times New Roman" color="#000000">Рассмотрим
      пример программы, в которой применяются
      несколько вложенных друг в друга условных
      операторов. В этой программе сторока <strong>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      float A, B, X </strong>объявляет эти три переменные как
      величины вещественного типа. Форматная строка
      функции <strong>scanf </strong>предписывает ввести два
      вещественные числа, которые станут значениями
      переменных <strong>A и B </strong>соответственно.</font></p>
      <p align="left"><font face="Times New Roman" color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
      Пример 1.4</font></p>
      <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="53%">
        <tr>
          <td width="100%"><strong><font face="Times New Roman">/*РЕШЕНИЕ УРАВНЕНИЯ
          AX=B*/<br>
          </font>#include &lt;stdio.h&gt; <br>
          <font face="Times New Roman">main()<br>
          {&nbsp;&nbsp;</font></strong><p><strong><font face="Times New Roman">&nbsp;&nbsp; float
          A,B,X;<br>
          &nbsp;&nbsp; printf(&quot;ВВЕДИ А, В\n&quot;);<br>
          &nbsp;&nbsp; scanf(&quot;%f %f&quot;,&amp;A, &amp;B);<br>
          &nbsp;&nbsp; if(A!=0)<br>
          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РЕШЕНИЕ:%f\n&quot;, B/A);<br>
          &nbsp;&nbsp; else <br>
          &nbsp;&nbsp; if(B==0)<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;X-ЛЮБОЕ ЧИСЛО\n&quot;);<br>
          &nbsp;&nbsp; else<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РЕШЕНИЙ НЕТ\n&quot;);<br>
          }</font></strong></td>
        </tr>
      </table>
      </center></div><p align="left"><font face="Arial" color="#804040"><small><strong>&nbsp; </strong></small></font><font
      face="Times New Roman" color="#000000">Посмотрите, как выглядит
      ветвление, когда глубина вложенности условных
      операторов равна трем (пример 1.5). Если хоть одно
      условие истинно, то все оставшиеся, разумеется,
      пропускаются. При глубине вложенности условных
      операторов свыше трех ветвление теряет
      наглядность и понятность. &nbsp;&nbsp;<br>
      &nbsp;&nbsp;&nbsp;&nbsp; Для реализации многозадачного
      ветвления обычно прибегают к управляющей
      стркутуре <strong>выбор (</strong>переключатель)&nbsp;(см.
      п.9.4). Когда управляющяя структура ветвления
      становится особенно запутанной, определенную
      ясность могут внести фигурные скобки. Они
      обязательны, когда в условном операторе
      содержится более одного опрератора или функции,
      например</font>&nbsp;&nbsp;&nbsp; </p>
      <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="37%">
        <tr>
          <td width="100%"><strong>if(a_0)<br>
          &nbsp;&nbsp; {<br>
          &nbsp;&nbsp;&nbsp; printf(&quot;...&quot;);<br>
          &nbsp;&nbsp;&nbsp; scanf(&quot;...&quot;)<br>
          &nbsp;&nbsp;&nbsp; другие операторы ...<br>
          &nbsp;&nbsp; }</strong></td>
        </tr>
      </table>
      </center></div><p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Пример 1.5
      &nbsp;&nbsp; </p>
      <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="79%">
        <tr>
          <td width="100%"><strong>/* Програииа определяет поведение
          ракеты,<br>
          &nbsp;&nbsp;&nbsp; стартующей на экваторе, в зависимости<br>
          &nbsp;&nbsp;&nbsp; от ее начальной скорости*/<br>
          #include &lt;stdio.h&gt;<br>
          main()<br>
          &nbsp; {<br>
          &nbsp;&nbsp; float V;<br>
          &nbsp;&nbsp; printf(&quot;ВВЕДИ V\n&quot;);<br>
          &nbsp;&nbsp; scanf(&quot;%f&quot;,&amp;V);<br>
          &nbsp;&nbsp; if(V&lt;7.9)<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РАКЕТА УПАДЕТ НА ЗЕМЛЮ\n&quot;);<br>
          &nbsp;&nbsp; if(V&lt;11.2)<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РАКЕТА СТАНЕТ СПУТНИКОМ
          ЗЕМЛИ\n &quot;);<br>
          &nbsp;&nbsp; if(V&lt;16.4)<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РАКЕТА СТАНЕТ СПУТНИКОМ
          СОЛНЦА\n&quot;);<br>
          &nbsp;&nbsp; else<br>
          &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;РАКЕТА ПОКИНЕТ СОЛНЕЧНУЮ
          СИСТЕМУ\n&quot;); <br>
          }</strong></td>
        </tr>
      </table>
      </center></div><p align="center">&nbsp;</p>
      <p align="center"><font face="Arial" color="#804040"><small><strong>&lt; <a
      href="book003.htm" target="_self" style="color: rgb(128,64,64)">Назад</a> &gt;
      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <a href="book005.htm"
      style="color: rgb(128,64,64)">Дальше</a> &gt;</strong></small></font></td>
    </tr>
  </table>
  </center></div>
</dl>
</body>
</html>
