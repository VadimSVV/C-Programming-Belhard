<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>Документация по Cи, C++ и Visual C++</title>
</head>

<body background="../../background/bg6.gif" link="Black" vlink="Black" topmargin=2
leftmargin="5" bgcolor="Aqua">

<p align="center"><strong><big><font color="#FF0000" face="Arial">&nbsp;&nbsp; </font><font face="Arial" color="Maroon">Организация циклов с помощью
оператора for</font></big></strong></p>
<div align="center"><center>

<table width="90%" height="132" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" height="132">
<p align="left"><strong><font face="Arial" color="#0080FF"><big>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Стр. 12 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </big></font><font
    face="Arial" color="#800000"><small>&lt; <a href="../visual_docum1.htm" target="_self"
    style="color: rgb(128,64,64)">оглавление </a>&gt;</small></font></strong><font
    face="Times New Roman" color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Оператора <strong>for </strong>является
    самой популярной структурой для организации
    циклов. В общем случае его можно представить так :
    </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>for(
    выражение1; выражение2; выражение3) оператор; </strong></p>
    <p align="left">В одной строке этот оператор определяет
    сразу три составляющие, отделяемые друг от друга
    точкой с запятой: а) начальное значение параметра
    цикла(выражение1), б) условие оканчания цикла
    (выражение2) , в) закон изменения параметра
    цикла(выражение3). Формально этот оператор
    эквиалентен последовательности операторов </p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="37%">
      <tr>
        <td width="100%"><strong>выражение1;<br>
        while(выражение2)<br>
        {<br>
        &nbsp; оператор;<br>
        &nbsp; выражение3;<br>
        )</strong></td>
      </tr>
    </table>
    </center></div><p align="left"><font face="Times New Roman" color="#000000">&nbsp; В
    следующей программе (пример 4.4) оператор<strong> for</strong>
    служит для организации и печати
    последовательных чисел Фибоначчи, не
    превосходящих <strong>m. </strong>Проверка <strong>k&lt;=m </strong>происходит
    перед каждым (в том числе и перед первым) &nbsp;
    выполнением тела цикла. Тело цикла выполняется,
    если проверочное выражение истинно. Затем
    следует изменение параметра: <strong>k=k+1; </strong>этот
    оператор, кстати, формирует очередное число
    Фибоначчи, а оператор <strong>j=k-j; </strong>хранит
    предыдущее. </font></p>
    <p align="left"><font face="Times New Roman" color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Пример 4.4</font></p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="37%">
      <tr>
        <td width="100%"><strong>/*числа Фибоначчи*/<br>
        #include &lt;stdio.h&gt;<br>
        main()<br>
        {<br>
        int m, k, j=1;<br>
        printf(&quot;введи m\n&quot;);<br>
        scanf(&quot;%d&quot;,&amp;m);<br>
        for(k=1;k&lt;=m;k=k+j)<br>
        {<br>
        &nbsp;&nbsp;&nbsp;&nbsp; printf(&quot;%d&quot;,k);<br>
        &nbsp;&nbsp;&nbsp; j=k-j;<br>
        }<br>
        }</strong></td>
      </tr>
    </table>
    </center></div><p align="left">&nbsp;&nbsp;&nbsp; Как и в операторе <strong>while,
    </strong>тело цикла for может состоять из
    единственного оператора или из нескольких,
    заключенных в скобки. Следующяя программа
    (пример 4.5) предназначена для печати
    гистопрограммы длин читаемых слов (признак конца
    слова - пробел, запятая или &quot;\n&quot;). Оператор <strong>for
    </strong>управляет циклом, состоящим по сути из
    одного оператора <strong>if </strong>, так что скобки
    можно было бы опустить. Для построения
    гистопрограммы выбран символ, внутреннее
    представление которого в коде <strong>ASCII </strong>численно
    равно 220. <br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; В скобках после
    ключевого слова <strong>for </strong>можно размещать
    выражения. Однако выражение1 и выражение3 не
    обязаны присваивать начальное значение и
    изменять параметр цикла, а выражение2 не обязано
    быть проверкой условия. Но компилятор всегда
    интерпретирует выражение2 как истинну или ложь
    (ложь- двоичный нуль, истина - все остальное).
    Любое из трех может быть опущено, хотя точка с
    запятой должна остаться. Допускается даже такой
    вырожденный случай: <strong>for(;;);. </strong>Он означает
    бесконечный цикл, так как пропущенное выражение2
    всегда трактуется как истина. </p>
    <p align="left">&nbsp; Пример 4.5</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="50%">
      <tr>
        <td width="100%"><strong>#include &lt;stdio.h&gt;<br>
        main() <br>
        { <br>
        char str[24]; <br>
        int i,n=0; <br>
        printf(&quot;введи строку:\n&quot;);<br>
        while((str[n++]=getchar())!='\n'; <br>
        printf(&quot;%d\n&quot;,n);<br>
        for(i=0;i&lt;n;i++) <br>
        { <br>
        if(str[i]!=' ' &amp;&amp;<br>
        str[i]!=',' &amp;&amp; str[i]!= '\n')<br>
        printf(&quot;%c&quot;,220); <br>
        else <br>
        printf(&quot;\n&quot;); <br>
        } <br>
        } </strong></td>
      </tr>
    </table>
    </center></div><p align="left">&nbsp;&nbsp; В Си есть еще операция
    &quot;, &quot; (запятая), которая чаще всего
    используется в операторе <strong>for. </strong>Пара
    выражений, разделенных запятой, вычисляются
    слева направо. В каждой из трех составляющих
    оператора <strong>for </strong>можно помещать несколько
    выражений, разделенных запятыми. Этот прием
    часто используют, например, для синхронного
    изменения двух индексов при обработке массивов.
    В качестве примера приведем функцию <strong>substr, </strong>которая
    позволяет из задонной строки <strong>s1 </strong>выделить
    подстроку <strong>s2 </strong>указанной длины <strong>L, </strong>начиная
    с <strong>k-го </strong>по порядку символа (нумерация
    символов начинается с нуля). Функция принимает
    также параметр <strong>m- </strong>общее кол-во символов в
    исходной строке, чтобы контролировать возможный
    выход за ее пределы(пример 4.6). </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Пример 4.6</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="61%">
      <tr>
        <td width="100%"><strong>/*выделение подстроки*/ <br>
        substr(char s1, char s2, int l, int k, int m)<br>
        { <br>
        int j,i; <br>
        if(l+l&gt;=m)k=m-l-1;<br>
        for(i=1,j=0;i&lt;l+k;i++.j++)<br>
        s2[j]=s1[i]; <br>
        } <br>
        #include &lt;stdio.h&gt;<br>
        main()<br>
        {<br>
        char str[80], str2[80];<br>
        int k,l,m=0; <br>
        printf(&quot;ведите строку&quot;); <br>
        while((str1[m++]=getchar())!='\n'); <br>
        printf(&quot;\n&quot;); <br>
        /*m сохраняет свое значение*/ <br>
        printf(&quot;введите l и k\n&quot;); <br>
        scanf(&quot;%d %d&quot;,&amp;l, &amp;k);<br>
        substr(str1,str2,l,k,m);<br>
        printf(&quot;%s\n&quot;,str2); <br>
        } </strong></td>
      </tr>
    </table>
    </center></div><p align="left">&nbsp; Преимущество оператора <strong>for
    </strong>- компактность и объединение в одной строке
    трех операторов управления циклом - особенно
    заметно проявляется во вложенных циклах.
    Очередная прогрпмма(пример 4.6) предназначена для
    упорядочения целых чисел по возрастанию. Функция
    <strong>sor </strong>реализует один из наиболее простых
    алгоритмов сортировки - метод &quot;пузырька&quot;.</p>
    <p align="left">Пример 4.6</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="54%">
      <tr>
        <td width="100%"><strong>/*СОРТИРОВКА */<br>
        #include &lt;stdio.h&gt;<br>
        main()<br>
        {<br>
        extern int sor();<br>
        int i,n;<br>
        static a[10]={10,1,9,2,8,3,7,4,6,5};<br>
        n=10;<br>
        sor(a,n);<br>
        for(i=0; i&lt;n; i++)<br>
        &nbsp; printf(&quot; %d&quot;,a[i]);<br>
        }<br>
        /*________________*/<br>
        int sor(int x[], int n)<br>
        {<br>
        int i,j,z;<br>
        for(i=0;i&lt;n-1;i++)<br>
        &nbsp;&nbsp;&nbsp; for(j=i+1;j&lt;n;j++)<br>
        if(x[i]&gt;x[j])<br>
        {<br>
        z=x[i];<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[i]=x[j];<br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x[j]=z;<br>
        }<br>
        &nbsp; return;<br>
        }</strong></td>
      </tr>
    </table>
    </center></div><p align="left"><font face="Times New Roman" color="#000000"><small><small>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </small></small>Еще один пример со вложенными циклами
    демонстрирует программа (пример 4.7). Она
    использует одну полезную при обработке текстов
    функцию <strong>index. </strong>Функция <strong>index </strong>определяет
    , входит ли в некоторую строку <strong>s1 </strong>заданная
    подстрока <strong>s2 </strong>и выдает положение
    (индекс)&nbsp; в строке <strong>s1 </strong>, начиная с
    которого строка <strong>s2 </strong>содержится в <strong>s1. </strong>Если
    <strong>s2 </strong>не входит в <strong>s1, </strong>то функция
    возращает <strong>'-1'.&nbsp; </strong></font></p>
    <p align="left"><font face="Times New Roman" color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Пример 4.7</font></p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="64%">
      <tr>
        <td width="100%"><strong>/*индекс строки */<br>
        index(s1,s2)<br>
        char s1[],s2[];<br>
        {<br>
        int i,j,k;<br>
        for(i=0;s1[i]!='\0'; i++)<br>
        {<br>
        for(j=i,k=0;s2[k]!='\0'<br>
        &amp;&amp; s1[j]==s2[k]; j++,k++);<br>
        if(s2[k]=='\0')<br>
        return(i);<br>
        }<br>
        return(-1);<br>
        }<br>
        char str1[]=&quot;информатика&quot;<br>
        chra str2[]=&quot;форма&quot;<br>
        #include &lt;stdio.h&gt;<br>
        main()<br>
        {<br>
        printf(&quot;%d\n&quot;,index(str1,str2));<br>
        }<br>
        </strong></td>
      </tr>
    </table>
    </center></div><p align="center"><small><font face="Arial" color="#804040"><strong>&lt; <a
    href="book011.htm" target="_self" style="color: rgb(128,64,64)">Назад</a> &gt;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <a href="book013.htm"
    style="color: rgb(128,64,64)">Дальше</a> &gt;</strong></font></small><br>
</td>
  </tr>
</table>
</center></div>
</body>
</html>
