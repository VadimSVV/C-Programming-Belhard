<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>Документация по Cи, C++ и Visual C++</title>
</head>

<body background="../../background/bg6.gif" link="Black" vlink="Black" topmargin=2
leftmargin="5" bgcolor="Aqua">

<p align="center"><strong><big><font color="#FF0000" face="Arial">&nbsp;&nbsp; </font><font face="Arial" color="Maroon">Массивы символов</font></big></strong></p>
<div align="center"><center>

<table width="90%" height="132" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td width="100%" height="132"><p align="left"><strong><font face="Arial" color="#0080FF"><big>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    Стр. 11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </big></font><font
    face="Arial" color="#800000"><small>&lt; <a href="../visual_docum1.htm" target="_self"
    style="color: rgb(128,64,64)">оглавление </a>&gt;</small></font></strong><font
    face="Times New Roman" color="#000000">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font></p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Любая символьная
    константа, например &quot;ОЙ У ПОЛИ КРИНИЧКА&quot;,
    представляет собой массив символов. Во
    внутреннем представлении компилятор завершает
    такой массив символом <strong>&quot;\0&quot;</strong>, так что
    любая программа может по нему легко обнаружить
    конец строки. Поэтому строка занимает в паямяти
    на один символ больше, чем записано между
    двойными кавычками. Нумерация элементов массива
    начинается с нуля. Надо помнить, что, например 'T' -
    это символ(буква), а ' T ' - это строка, состоящая из
    двух символов: 'T' и '\0'. Отсюда следует, что пустых
    строк не бывает.&nbsp;<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Строка в языке Си - это
    разновидность константы и ее можно присваивать
    некоторой переменной, представляющей массив
    символов: </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>&nbsp; char
    str[]=&quot;ТЕКСТ&quot;;</strong></p>
    <p align="left">&nbsp; Такая запись и короче и понятнее, чем
    общепринятая для начальной инициализации
    массивов: </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>char
    str[]={'Т','Е','К','С','Т',};</strong></p>
    <p align="left"><strong>&nbsp; </strong>Если длина строки в
    квадратных скобках опущена, то она определяется
    автоматически, по количеству присваеваемых
    символов. В приведенном выше примере она равна
    шести.&nbsp;<br>
    &nbsp;&nbsp;&nbsp; Запишем программу (пример 4.1), в которой
    функция main формирует строку по указанному выше
    правилу и вызывает функцию <strong>length, </strong>которая
    в качестве аргумента получает начальный адрес
    этой строки и вычисляет ее длину(без учета
    завеершающего символа). Эта функция представляет
    собой самостоятельный интерес и будет
    использована нами а дальнейшем как библиотечная.
    </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Пример 4.1</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="49%">
      <tr>
        <td width="100%"><strong>/*длина сторки*/<br>
        length(s);<br>
        char s[];<br>
        {<br>
        int l=0;<br>
        while(s[l]!='\0')<br>
        i++;<br>
        return(i);<br>
        }<br>
        #include &lt;stdio.h&gt;<br>
        main()<br>
        {<br>
        static char str[]=&quot;ОЙ У ПОЛИ КРИНИЧКА&quot;;<br>
        printf(&quot;%d&quot;,length(str));<br>
        }</strong></td>
      </tr>
    </table>
    </center></div><p align="left">&nbsp; Программа приведенная ниже
    (пример 4.2), выполняет сцепление двух строк.
    Собственно, сцепление выполняет функция <strong>concat(s,t),
    </strong>которая присоединят строку t к концу строки
    s. Объединяемые строки <strong>str1 </strong>и <strong>str2 </strong>объявлены
    как внешние, причем размер str1 достаточно большой,
    чтобы сохранить новую строку. Используя
    спецификацию формата <strong>%s</strong>, функция printf
    выводит всю строку сразу,&nbsp; причем она
    &quot;знает&quot;, что печать остановить при
    достижении завершающего символа &quot;\0&quot;. </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Пример 4.2</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="52%">
      <tr>
        <td width="100%"><strong>/*сцепление строк*/<br>
        concat(s,t)<br>
        char s[],t[];<br>
        {<br>
        int i,j;<br>
        i=j=0;<br>
        /*поиск конца строки*/<br>
        while(s[i]!='\0')i++;<br>
        while((s[i++]=t[j++])!='\0');<br>
        /*копия t*/<br>
        #include &lt;stdio.h&gt;<br>
        char str1[45]=&quot;ОЙ ТАМ У ПОЛИ КРИНИЧКА&quot;;<br>
        char str2[]=&quot;ТАМ ХОРОША ВОДИЧКА&quot;;<br>
        main()<br>
        {<br>
        concat(str1,str2);<br>
        printf(&quot;%s&quot;,str);<br>
        }<br>
        </strong></td>
      </tr>
    </table>
    </center></div><p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; На
    пример 4.3 приведена программа с функцией <strong>revers(s),
    </strong>переставляющей символы строки <strong>s </strong>в
    обратном порядке. В качестве библиотечной
    исползуется&nbsp; ранее рассматривавшаяся функция <strong>length.
    </strong>Функция <strong>revers </strong>меняет местами символы
    строки, симетричные относительно ее середины;
    если в строке нечетное число символов, то средний
    символ остается на месте. </p>
    <p align="left">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Пример
    4.3</p>
    <div align="center"><center><table border="0" cellpadding="0" cellspacing="0" width="54%">
      <tr>
        <td width="100%"><strong>/*вращение строки*/ <br>
        #include stdio.h <br>
        #include &quot;length.c&quot; <br>
        revers(s) <br>
        char s[]; <br>
        { <br>
        int l,i=0; <br>
        l=length(s); <br>
        while(i_=l/2) <br>
        { <br>
        c=s[i]; s[i]=s[l-i-1]; <br>
        s[l-i-1]=c; <br>
        i++; <br>
        } <br>
        } <br>
        main() <br>
        { <br>
        static char str[]= &quot;ОЙ У ПОЛИ КРИНИЧКА&quot;; <br>
        revers(str); <br>
        printf(&quot;%s\n&quot;,str); <br>
        } </strong></td>
      </tr>
    </table>
    </center></div><p align="center"><font face="Arial" color="#804040"><small><strong>&lt; <a
    href="book010.htm" target="_self" style="color: rgb(128,64,64)">Назад</a> &gt;
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt; <a href="book012.htm"
    style="color: rgb(128,64,64)">Дальше</a> &gt;</strong></small></font><br>
    </td>
  </tr>
</table>
</center></div>
</body>
</html>
