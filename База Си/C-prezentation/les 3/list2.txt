#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<time.h>							//Заголовочный файл для функции time()

int rollDice();								//Заголовок функции для броска костей

int main()
{
	int sum;							//Сумма от броска костей
	int myVal;							//Число игрока
	int status;							//Статус игрока. 1-выиграл, 2-проиграл, 3-неопределен

	srand( time( 0 ) );						//Засеваем случайную последовательность.
	sum = rollDice();						//Кидаем кости первый раз.

	switch( sum )							//Смотрим, сколько выпало на костях
	{
	case 7:								//Если 7 или 11
	case 11:
		status = 1;						//Устанавливаем статус как выигравший
		break;
	case 2:								//Если 2, 3 или 12
	case 3:
	case 12:
		status = 2;						//Устанавливаем статус как проигравший
		break;
	default:							//Иначе
		myVal = sum;						//Запоминаем число игрока
		status = 3;						//Устанавливаем статус как неопределенный
		printf( "Player value is : %d\n", myVal );		//Выводим число игрока
		break;
	}

	while( status == 3 )						//Пока статус является неопределенным
	{
		sum = rollDice();					//Кидаем кости и запоминаем выпавшее число
		if( sum == myVal )					//Если число равно число игрока - 
			status = 1;					//игрок выиграл
		else if( sum == 7 )					//Иначе, если число равно 7 -
			status = 2;					//игрок проиграл
	}

	if( status == 1 )						//Если статус игрока - выигравший
		printf( "Player won!" );				//Выводим на экран
	else								//Иначе, если статус игрока проигравший
		printf( "Player loses!" );				//выводим на экран

	getch();
	return 0;
}

int rollDice()								//Функция броска костей
{
	int nom1 = 1 + rand() % 6;					//Первая кость
	int nom2 = 1 + rand() % 6;					//Вторая кость
	printf( "Rolled : %d + %d = % d\n", nom1, nom2, nom1 + nom2 );	//Выводим на экран сообщение о выпавших клстях
	return nom1 + nom2;						//Возвращаем сумму выпавших костей
}